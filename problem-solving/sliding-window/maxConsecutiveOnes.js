/** üß© Sliding Window ‚Äî –∑–∞–¥–∞—á–∞ 3: Max Consecutive Ones III (–∑ —Ñ–ª—ñ–ø–æ–º 0 ‚Üí 1)
 üìå –£–º–æ–≤–∞:
 –î–∞–Ω–æ –º–∞—Å–∏–≤ numbers, —â–æ –º—ñ—Å—Ç–∏—Ç—å –ª–∏—à–µ 0 —Ç–∞ 1. –ú–æ–∂–Ω–∞ "–ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∏" –º–∞–∫—Å–∏–º—É–º k –Ω—É–ª—ñ–≤ –Ω–∞ 1.
 –ó–Ω–∞–π—Ç–∏ –Ω–∞–π–¥–æ–≤—à–∏–π –ø—ñ–¥–º–∞—Å–∏–≤, —â–æ –º—ñ—Å—Ç–∏—Ç—å –ª–∏—à–µ 1 –ø—ñ—Å–ª—è —Ñ–ª—ñ–ø—ñ–≤.

 maxConsecutiveOnes([1,1,1,0,0,0,1,1,1,1,0], 2) // ‚Üí 6
 // –ù–∞–π–∫—Ä–∞—â–∏–π –ø—ñ–¥–º–∞—Å–∏–≤: [1,1,1,0,0,1] (—Ñ–ª—ñ–ø–Ω—É–ª–∏ –¥–≤–∞ 0)


 **/

const maxConsecutiveOnes = (numbers, k) => {
  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ –ø—ñ–¥–º–∞—Å–∏–≤—É, —è–∫–∏–π –º–æ–∂–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏
  let maxValue = 0;

  // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω—É–ª—ñ–≤, —è–∫—ñ –º–∏ –≤–∂–µ "–ø–µ—Ä–µ–≤–µ—Ä–Ω—É–ª–∏" –Ω–∞ 1
  let countFlip = 0;

  // –õ—ñ–≤–∞ –º–µ–∂–∞ –≤—ñ–∫–Ω–∞
  let left = 0;

  // –†—É—Ö–∞—î–º–æ –ø—Ä–∞–≤—É –º–µ–∂—É –≤—ñ–∫–Ω–∞
  for (let right = 0; right < numbers.length; right++) {
    // –Ø–∫—â–æ –±–∞—á–∏–º–æ 0 ‚Äî —Ä–∞—Ö—É—î–º–æ –π–æ–≥–æ —è–∫ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∏–π
    if (numbers[right] === 0) {
      countFlip++;
    }

    // –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–ª—ñ–ø—ñ–≤ –ø–µ—Ä–µ–≤–∏—â—É—î –ª—ñ–º—ñ—Ç ‚Äî –∑–º–µ–Ω—à—É—î–º–æ –≤—ñ–∫–Ω–æ –∑–ª—ñ–≤–∞
    while (countFlip > k) {
      // –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç, —è–∫–∏–π –ø—Ä–∏–±–∏—Ä–∞—î–º–æ, –±—É–≤ 0 ‚Äî –∑–º–µ–Ω—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ñ–ª—ñ–ø—ñ–≤
      if (numbers[left] === 0) {
        countFlip--;
      }

      // –ó—Å—É–≤–∞—î–º–æ –ª—ñ–≤—É –º–µ–∂—É –≤—ñ–∫–Ω–∞ –≤–ø—Ä–∞–≤–æ
      left++;
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –¥–æ–≤–∂–∏–Ω—É –≤–∞–ª—ñ–¥–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    maxValue = Math.max(maxValue, right - left + 1);
  }

  return maxValue;
};

const result = maxConsecutiveOnes([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 2);

console.log('result', result);
