/** üß© Two Pointers ‚Äî –∑–∞–¥–∞—á–∞ 1: Two Sum II ‚Äî Input Array Is Sorted
 üìå –£–º–æ–≤–∞:
 –î–∞–Ω–æ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –º–∞—Å–∏–≤ numbers —ñ target.
 –ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞–π—Ç–∏ —ñ–Ω–¥–µ–∫—Å–∏ –¥–≤–æ—Ö —á–∏—Å–µ–ª, —â–æ –≤ —Å—É–º—ñ –¥–∞—é—Ç—å target.
 –ü–æ–≤–µ—Ä–Ω—É—Ç–∏ —ñ–Ω–¥–µ–∫—Å–∏ (1-based), —è–∫—â–æ –ø–∞—Ä–∞ —ñ—Å–Ω—É—î. –ì–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ, —â–æ –æ–¥–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —î.  twoSum([2, 7, 11, 15], 9) ‚Üí [1, 2]
 twoSum([1, 3, 4, 6, 9, 11], 10) ‚Üí [1, 5]
  **/

function twoSum(numbers, target) {
  let left = 0;
  let right = numbers.length - 1;

  while (left < right) {
    const sum = numbers[left] + numbers[right];

    if (sum === target) {
      return [left + 1, right + 1]; // –ó–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω—É –ø–∞—Ä—É
    } else if (sum < target) {
      left++; // –°—É–º–∞ –∑–∞–º–∞–ª–∞ ‚Üí –∑–º—ñ—â—É—î–º–æ –ª—ñ–≤–∏–π –≤–∫–∞–∑—ñ–≤–Ω–∏–∫ –≤–ø—Ä–∞–≤–æ
    } else {
      right--; // –°—É–º–∞ –∑–∞–≤–µ–ª–∏–∫–∞ ‚Üí –∑–º—ñ—â—É—î–º–æ –ø—Ä–∞–≤–∏–π –≤–∫–∞–∑—ñ–≤–Ω–∏–∫ –≤–ª—ñ–≤–æ
    }
  }

  return [];
}

console.log('must be [1, 2]', twoSum([2, 7, 11, 15], 9));
console.log('must be [1, 5]', twoSum([1, 3, 4, 6, 9, 11], 10));

module.exports = { twoSum };
